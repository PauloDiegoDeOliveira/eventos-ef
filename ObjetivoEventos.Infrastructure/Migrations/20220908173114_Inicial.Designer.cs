// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ObjetivoEventos.Infrastructure.Data;

#nullable disable

namespace ObjetivoEventos.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220908173114_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CadeiraMesa", b =>
                {
                    b.Property<Guid>("CadeirasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MesasId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CadeirasId", "MesasId");

                    b.HasIndex("MesasId");

                    b.ToTable("CadeiraMesa");
                });

            modelBuilder.Entity("CadeiraSetor", b =>
                {
                    b.Property<Guid>("CadeirasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SetoresId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CadeirasId", "SetoresId");

                    b.HasIndex("SetoresId");

                    b.ToTable("CadeiraSetor");
                });

            modelBuilder.Entity("MesaSetor", b =>
                {
                    b.Property<Guid>("MesasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SetoresId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MesasId", "SetoresId");

                    b.HasIndex("SetoresId");

                    b.ToTable("MesaSetor");
                });

            modelBuilder.Entity("ObjetivoEventos.Domain.Entitys.Cadeira", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AlteradoEm")
                        .HasColumnType("datetime2");

                    b.Property<int>("Coluna")
                        .HasMaxLength(10000)
                        .HasColumnType("int")
                        .HasColumnName("Coluna");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fileira")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Fileira");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("Nome");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Ativo")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.ToTable("Cadeiras", (string)null);
                });

            modelBuilder.Entity("ObjetivoEventos.Domain.Entitys.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AlteradoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CEP");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Cidade");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Complemento");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Estado");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Logradouro");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Ativo")
                        .HasColumnName("Status");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Enderecos", (string)null);
                });

            modelBuilder.Entity("ObjetivoEventos.Domain.Entitys.Evento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AlteradoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CaminhoAbsoluto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaminhoFisico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaminhoRelativo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cantor")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Cantor");

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEvento")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtensaoArquivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HoraEnvio")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LocalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("Nome");

                    b.Property<Guid>("NomeArquivoBanco")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeArquivoOriginal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sobre")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Sobre");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Ativo")
                        .HasColumnName("Status");

                    b.Property<long>("TamanhoEmBytes")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LocalId");

                    b.ToTable("Eventos", (string)null);
                });

            modelBuilder.Entity("ObjetivoEventos.Domain.Entitys.Local", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AlteradoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CEP");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("Nome");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Ativo")
                        .HasColumnName("Status");

                    b.Property<string>("Telefone")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Telefone");

                    b.HasKey("Id");

                    b.ToTable("Locais", (string)null);
                });

            modelBuilder.Entity("ObjetivoEventos.Domain.Entitys.Mesa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("Alias");

                    b.Property<DateTime?>("AlteradoEm")
                        .HasColumnType("datetime2");

                    b.Property<int>("Coluna")
                        .HasMaxLength(10000)
                        .HasColumnType("int")
                        .HasColumnName("Coluna");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fileira")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Fileira");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("Nome");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Ativo")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.ToTable("Mesas", (string)null);
                });

            modelBuilder.Entity("ObjetivoEventos.Domain.Entitys.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AlteradoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("SituacaoPagamento")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("AguardandoPagamento")
                        .HasColumnName("SituacaoPagamento");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Ativo")
                        .HasColumnName("Status");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("ValorTotal")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Pedidos", (string)null);
                });

            modelBuilder.Entity("ObjetivoEventos.Domain.Entitys.Reserva", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AlteradoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CadeiraId")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("CadeiraId");

                    b.Property<string>("ConnectionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EventoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LocalId")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("LocalId");

                    b.Property<string>("MesaId")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("MesaId");

                    b.Property<Guid>("SetorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Reservado")
                        .HasColumnName("Situacao");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Ativo")
                        .HasColumnName("Status");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.ToTable("Reservas", (string)null);
                });

            modelBuilder.Entity("ObjetivoEventos.Domain.Entitys.Setor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("Alias");

                    b.Property<DateTime?>("AlteradoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LocalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("Nome");

                    b.Property<string>("Posicao")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("Posicao");

                    b.Property<float>("Preco")
                        .HasMaxLength(10000)
                        .HasColumnType("real")
                        .HasColumnName("Preco");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Ativo")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.HasIndex("LocalId");

                    b.ToTable("Setores", (string)null);
                });

            modelBuilder.Entity("PedidoReserva", b =>
                {
                    b.Property<Guid>("PedidosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReservasId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PedidosId", "ReservasId");

                    b.HasIndex("ReservasId");

                    b.ToTable("PedidoReserva");
                });

            modelBuilder.Entity("CadeiraMesa", b =>
                {
                    b.HasOne("ObjetivoEventos.Domain.Entitys.Cadeira", null)
                        .WithMany()
                        .HasForeignKey("CadeirasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObjetivoEventos.Domain.Entitys.Mesa", null)
                        .WithMany()
                        .HasForeignKey("MesasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CadeiraSetor", b =>
                {
                    b.HasOne("ObjetivoEventos.Domain.Entitys.Cadeira", null)
                        .WithMany()
                        .HasForeignKey("CadeirasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObjetivoEventos.Domain.Entitys.Setor", null)
                        .WithMany()
                        .HasForeignKey("SetoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MesaSetor", b =>
                {
                    b.HasOne("ObjetivoEventos.Domain.Entitys.Mesa", null)
                        .WithMany()
                        .HasForeignKey("MesasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObjetivoEventos.Domain.Entitys.Setor", null)
                        .WithMany()
                        .HasForeignKey("SetoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ObjetivoEventos.Domain.Entitys.Evento", b =>
                {
                    b.HasOne("ObjetivoEventos.Domain.Entitys.Local", "Local")
                        .WithMany("Eventos")
                        .HasForeignKey("LocalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Local");
                });

            modelBuilder.Entity("ObjetivoEventos.Domain.Entitys.Reserva", b =>
                {
                    b.HasOne("ObjetivoEventos.Domain.Entitys.Evento", "Evento")
                        .WithMany("Reservas")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("ObjetivoEventos.Domain.Entitys.Setor", b =>
                {
                    b.HasOne("ObjetivoEventos.Domain.Entitys.Local", "Local")
                        .WithMany("Setores")
                        .HasForeignKey("LocalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Local");
                });

            modelBuilder.Entity("PedidoReserva", b =>
                {
                    b.HasOne("ObjetivoEventos.Domain.Entitys.Pedido", null)
                        .WithMany()
                        .HasForeignKey("PedidosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObjetivoEventos.Domain.Entitys.Reserva", null)
                        .WithMany()
                        .HasForeignKey("ReservasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ObjetivoEventos.Domain.Entitys.Evento", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("ObjetivoEventos.Domain.Entitys.Local", b =>
                {
                    b.Navigation("Eventos");

                    b.Navigation("Setores");
                });
#pragma warning restore 612, 618
        }
    }
}
